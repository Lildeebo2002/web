services:
  ocis:
    image: ${OCIS_IMAGE:-owncloud/ocis:latest}
    container_name: web_ocis
    environment:
      # OCIS
      OCIS_URL: ${OCIS_URL:-https://host.docker.internal:9200}
      OCIS_INSECURE: "${OCIS_INSECURE:-true}"
      OCIS_LOG_LEVEL: ${OCIS_LOG_LEVEL:-error}
      OCIS_LOG_PRETTY: "${OCIS_LOG_PRETTY:-true}"
      OCIS_LOG_COLOR: "${OCIS_LOG_COLOR:-true}"
      OCIS_SYSTEM_USER_ID: "${OCIS_SYSTEM_USER_ID:-some-system-user-id-000-000000000000}"
      OCIS_ADMIN_USER_ID: "${OCIS_ADMIN_USER_ID:-some-admin-user-id-0000-000000000000}"
      OCIS_SYSTEM_USER_API_KEY: "${OCIS_SYSTEM_USER_API_KEY:-some-system-user-machine-auth-api-key}"
      OCIS_JWT_SECRET: "${OCIS_JWT_SECRET:-some-ocis-jwt-secret}"
      OCIS_MACHINE_AUTH_API_KEY: "${OCIS_MACHINE_AUTH_API_KEY:-some-ocis-machine-auth-api-key}"
      STORAGE_USERS_MOUNT_ID: "1284d238-aa92-42ce-bdc4-0b0000009157"
      GATEWAY_STORAGE_USERS_MOUNT_ID: "1284d238-aa92-42ce-bdc4-0b0000009157"
      GATEWAY_GRPC_ADDR: 0.0.0.0:9142 # make the REVA gateway accessible to the app drivers
      MICRO_REGISTRY: "mdns" # make the registry available to the app provider containers

      # WEB
      WEB_UI_CONFIG: ${WEB_UI_CONFIG:-/web/config.json}
      WEB_ASSET_PATH: ${WEB_ASSET_PATH:-/web/dist}
      WEB_UI_THEME_PATH: ${WEB_UI_THEME_PATH:-/themes/owncloud/theme.json}

      #FRONTEND
      FRONTEND_SEARCH_MIN_LENGTH: "2"
      FRONTEND_OCS_ENABLE_DENIALS: "true"

      # IDM
      IDM_CREATE_DEMO_USERS: "${DEMO_USERS:-true}"
      IDM_ADMIN_PASSWORD: "${ADMIN_PASSWORD:-admin}" # override the random admin password from `ocis init`
      IDM_SVC_PASSWORD: "${IDM_SVC_PASSWORD:-some-ldap-idm-password}"
      IDM_REVASVC_PASSWORD: "${IDM_REVASVC_PASSWORD:-some-ldap-reva-password}"
      IDM_IDPSVC_PASSWORD: "${IDM_IDPSVC_PASSWORD:-some-ldap-idp-password}"

      # IDP
      IDP_LDAP_BIND_PASSWORD: "${IDP_LDAP_BIND_PASSWORD:-some-ldap-idp-password}"

      # STORAGE
      STORAGE_HOME_DRIVER: ${STORAGE_HOME_DRIVER:-ocis}
      STORAGE_USERS_DRIVER: ${STORAGE_USERS_DRIVER:-ocis}
      STORAGE_TRANSFER_SECRET: "${STORAGE_TRANSFER_SECRET:-some-ocis-transfer-secret}"

      # LDAP
      GROUPS_LDAP_BIND_PASSWORD: "${GROUPS_LDAP_BIND_PASSWORD:-some-ldap-reva-password}"
      USERS_LDAP_BIND_PASSWORD: "${USERS_LDAP_BIND_PASSWORD:-some-ldap-reva-password}"
      AUTH_BASIC_LDAP_BIND_PASSWORD: "${AUTH_BASIC_LDAP_BIND_PASSWORD:-some-ldap-reva-password}"
      GRAPH_APPLICATION_ID: "${GRAPH_APPLICATION_ID:-some-graph-app-id}"
      GRAPH_LDAP_BIND_PASSWORD: "${GRAPH_LDAP_BIND_PASSWORD:-some-ldap-idm-password}"
      LDAP_GROUP_SUBSTRING_FILTER_TYPE: "any"
      LDAP_USER_SUBSTRING_FILTER_TYPE: "any"

      # PROXY
      PROXY_ENABLE_BASIC_AUTH: "${PROXY_ENABLE_BASIC_AUTH:-true}"
      PROXY_TLS: "false"

      # CORS
      OCIS_CORS_ALLOW_ORIGINS: "https://host.docker.internal:9201"
    volumes:
      - ./dev/docker/ocis.entrypoint.sh:/usr/bin/entrypoint
      - ./dev/docker/app-registry.yaml:/etc/ocis/app-registry.yaml
      - ./dev/docker/ocis.idp.config.yaml:/etc/ocis/idp.yaml
      - ./dev/docker/ocis-ca:/var/lib/ocis/proxy
      - ./dist:/web/dist
      - ${OCIS_WEB_CONFIG:-./dev/docker/ocis.web.config.json}:/web/config.json:ro
    extra_hosts:
      - host.docker.internal:${DOCKER_HOST:-host-gateway}
    entrypoint: /usr/bin/entrypoint
    labels:
      traefik.enable: true
      traefik.http.routers.ocis.rule: PathPrefix(`/`)
      traefik.http.routers.ocis.entrypoints: websecure
      # workaround: https://github.com/owncloud/ocis/issues/5108
      traefik.http.routers.ocis.middlewares: cors
    depends_on:
      - traefik

  traefik:
    image: traefik:v2.10.1
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c", "[ -f /certificates/server.key ] && ./entrypoint.sh $$@ || (apk add openssl && openssl req -subj '/CN=ocis.test' -x509 -sha256 -nodes -days 3650 -newkey rsa:2048 -keyout /certificates/server.key -out /certificates/server.crt && chmod -R 777 /certificates && ./entrypoint.sh $$@)"]
    command:
      - "--pilot.dashboard=false"
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.file.directory=/configs"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.middlewares=https_config@docker"
      - "--entrypoints.websecure.http.tls.options=default"
    labels:
      traefik.enable: true
      traefik.http.routers.http_catchall.rule: HostRegexp(`{any:.+}`)
      traefik.http.routers.http_catchall.entrypoints: web
      traefik.http.routers.http_catchall.middlewares: https_config
      traefik.http.middlewares.https_config.headers.sslRedirect: true
      traefik.http.middlewares.https_config.headers.stsSeconds: 63072000
      traefik.http.middlewares.https_config.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.cors.headers.accesscontrolallowmethods: "*"
      traefik.http.middlewares.cors.headers.accesscontrolallowheaders: "*"
      traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist: "*"
      traefik.http.middlewares.cors.headers.accesscontrolmaxage: 100
      traefik.http.middlewares.cors.headers.addvaryheader: true
    ports:
      - "80:80"
      - "8090:8080"
      - "9200:443"
    volumes:
      - "./dev/docker/traefik/certificates:/certificates"
      - "./dev/docker/traefik/configs:/configs"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  ocis-appprovider-onlyoffice:
    image: owncloud/ocis:${OCIS_DOCKER_TAG:-latest}
    user: "0" # needed for apk add in entrypoint script
    entrypoint:
      - /bin/sh
      - /entrypoint-override.sh
    #command: app-provider server
    environment:
      # use the internal service name of the gateway
      REVA_GATEWAY: ${REVA_GATEWAY:-com.owncloud.api.gateway}
      APP_PROVIDER_GRPC_ADDR: 0.0.0.0:9164
      # configure the service name to avoid collision with collabora
      APP_PROVIDER_SERVICE_NAME: app-provider-onlyoffice
      # use the internal service name
      APP_PROVIDER_EXTERNAL_ADDR: com.owncloud.api.app-provider-onlyoffice
      APP_PROVIDER_DRIVER: wopi
      APP_PROVIDER_WOPI_APP_NAME: OnlyOffice
      APP_PROVIDER_WOPI_APP_ICON_URI: https://localhost:9920/web-apps/apps/documenteditor/main/resources/img/favicon.ico
      APP_PROVIDER_WOPI_APP_URL: https://localhost:9920
      APP_PROVIDER_WOPI_INSECURE: "${INSECURE:-false}"
      APP_PROVIDER_WOPI_WOPI_SERVER_EXTERNAL_URL: https://localhost:8880
      APP_PROVIDER_WOPI_FOLDER_URL_BASE_URL: ${OCIS_URL:-https://host.docker.internal:9200}
      # share the registry with the ocis container
      MICRO_REGISTRY: "mdns"
    volumes:
      - ./config/ocis-appprovider-onlyoffice/entrypoint-override.sh:/entrypoint-override.sh
      - ocis-config:/etc/ocis
    logging:
      driver: "local"
    restart: always

  wopiserver:
    image: cs3org/wopiserver:${WOPISERVER_DOCKER_TAG:-v9.4.0}
    entrypoint:
      - /bin/sh
      - /entrypoint-override.sh
    environment:
      WOPISERVER_INSECURE: "${INSECURE:-false}"
    volumes:
      - ./config/wopiserver/entrypoint-override.sh:/entrypoint-override.sh
      - ./config/wopiserver/wopiserver.conf.dist:/etc/wopi/wopiserver.conf.dist
      - wopi-recovery:/var/spool/wopirecovery
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wopiserver.entrypoints=https"
      - "traefik.http.routers.wopiserver.rule=Host(`${WOPISERVER_DOMAIN:-localhost:8880}`)"
      - "traefik.http.routers.wopiserver.tls.certresolver=http"
      - "traefik.http.routers.wopiserver.service=wopiserver"
      - "traefik.http.services.wopiserver.loadbalancer.server.port=8880"
    ports:
      - 8880:8880
    logging:
      driver: "local"
    restart: always

  onlyoffice:
    image: onlyoffice/documentserver:7.3.0
    entrypoint:
      - /bin/sh
      - /entrypoint-override.sh
    environment:
      WOPI_ENABLED: "true"
      USE_UNAUTHORIZED_STORAGE: "${INSECURE:-false}" # self-signed certificates
    volumes:
      - ./dev/docker/config/onlyoffice/entrypoint-override.sh:/entrypoint-override.sh
      - ./dev/docker/config/onlyoffice/local.json:/etc/onlyoffice/documentserver/local.dist.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.onlyoffice.entrypoints=https"
      - "traefik.http.routers.onlyoffice.rule=Host(`${ONLYOFFICE_DOMAIN:-localhost:9920}`)"
      - "traefik.http.routers.onlyoffice.tls.certresolver=http"
      - "traefik.http.routers.onlyoffice.service=onlyoffice"
      - "traefik.http.services.onlyoffice.loadbalancer.server.port=80"
      # websockets can't be opened when this is ommitted
      - "traefik.http.middlewares.onlyoffice.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.onlyoffice.middlewares=onlyoffice"
    ports:
      - 9920:80
    logging:
      driver: "local"
    restart: always

volumes:
  uploads:
  uppy_companion_datadir:
  traefik_letsencrypt:
  ocis-config:
  ocis-data:
  wopi-recovery:
